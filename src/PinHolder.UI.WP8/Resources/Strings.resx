<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AboutContact" xml:space="preserve">
    <value>For technical support, or when you have suggestions or comments, don't hesitate to contact me at:</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>PinHolder</value>
  </data>
  <data name="Cards" xml:space="preserve">
    <value>cards</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Anton Sizikov</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>contact</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="DescriptionHere" xml:space="preserve">
    <value>type a description here</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>edit</value>
  </data>
  <data name="FeedbackTo" xml:space="preserve">
    <value>pinholder@yandex.ru</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="HelpFormatted" xml:space="preserve">
    <value>Hello! 
This app can help you to store your PIN-codes easily and safely.

At first we should add a new card by pressing "+" on the apps main screen.

On the Edit screen enter the name of your card and it's description.

For example: 
Card name: Bank "Yourbank" 
Description: salary.

Then you'll see twenty cells. They are different coloured. Enter your PIN-code in any four cells.
Come up with a secret system of your PIN-code encryption.

For example: In blue cells, up to down.
Or: In the bottom row, left to right.

After you entered four PIN-code digits the app will fill reminded cells by random digits.

Don't forget to save your card!

Now a new tile with your card info will appear on the app's main screen.

If you press the tile the app would show you a twenty cells grid.

This grid looks like a random digits set, but you will know wich cells store your PIN-code.

That's all!

Now your PIN-codes are on hand, and they are safely masked.</value>
  </data>
  <data name="HowTo" xml:space="preserve">
    <value>need help?</value>
  </data>
  <data name="IfYouLike" xml:space="preserve">
    <value>If you like the app, please send a review to the Marketplace.</value>
  </data>
  <data name="MasterPassIsNotUsed" xml:space="preserve">
    <value>master-password is not used</value>
  </data>
  <data name="MasterPassIsUsed" xml:space="preserve">
    <value>master-password is used</value>
  </data>
  <data name="MasterPassUse" xml:space="preserve">
    <value>use master-password to protect your data:</value>
  </data>
  <data name="NameHere" xml:space="preserve">
    <value>type a card name here</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="NoCard" xml:space="preserve">
    <value>You don't have any cards yet. Let's add new one!</value>
  </data>
  <data name="Pin" xml:space="preserve">
    <value>pin to start</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>send a review</value>
  </data>
  <data name="Reorder" xml:space="preserve">
    <value>reorder</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>pin holder</value>
  </data>
</root>