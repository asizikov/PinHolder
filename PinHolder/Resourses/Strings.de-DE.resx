<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="AboutContact" xml:space="preserve">
    <value>For technical support, or when you have suggestions, comments or you can help me with translation, don't hesitate to contact me at:</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>PinHolder</value>
  </data>
  <data name="Cards" xml:space="preserve">
    <value>Karten</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>berühren</value>
    <comment>??</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DescriptionHere" xml:space="preserve">
    <value>Beschreibung der Karte</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Hilfe</value>
    <comment>????</comment>
  </data>
  <data name="HelpFormatted" xml:space="preserve">
    <value>Hallo!
Diese App kann Ihnen helfen, Ihre PIN-Codes einfach und sicher zu speichern.

Auf den ersten sollten wir eine neue Karte mit der Taste "+" auf der Apps Hauptbildschirm hinzuzufügen.

Auf dem Bildschirm Bearbeiten Sie den Namen Ihrer Karte und es ist Beschreibung.

Zum Beispiel:
Card name: Bank "Yourbank"
Beschreibung: Gehalt.

Dann wirst du sehen 20 Zellen. Sie sind unterschiedlich gefärbt. Geben Sie Ihren PIN-Code in allen vier Zellen.
Kommen Sie mit einem geheimen System Ihres PIN-Code-Verschlüsselung.

Zum Beispiel: In blauen Zellen, von oben nach unten.
Oder: In der unteren Reihe von links nach rechts.

Nachdem Sie vier PIN-Code eingegebenen Ziffern die App erinnert Zellen durch Zufallszahlen zu füllen.

Vergessen Sie nicht, Ihre Karte zu retten!

Jetzt eine neue Fliese mit Ihrer Kreditkarte Informationen werden auf dem App Hauptbildschirm angezeigt.

Wenn Sie die Fliese drücken Sie die App würde zeigen Sie eine twanty Zellen Gitter.

Dieses Gitter sieht aus wie ein zufälliger Ziffern eingestellt, aber Sie werden wissen, welche Zellen speichern Sie Ihre PIN-Code.

Das ist alles!

Jetzt ist Ihre PIN-Codes sind auf der Hand, und sie werden sicher maskiert.</value>
    <comment>??</comment>
  </data>
  <data name="HowTo" xml:space="preserve">
    <value>Brauchen Sie Hilfe?</value>
    <comment>???</comment>
  </data>
  <data name="IfYouLike" xml:space="preserve">
    <value>Wenn Sie die App gefällt, senden Sie bitte eine Rezension zu dem Marktplatz.</value>
    <comment>??</comment>
  </data>
  <data name="MasterPassIsNotUsed" xml:space="preserve">
    <value>master-password is not used</value>
  </data>
  <data name="MasterPassIsUsed" xml:space="preserve">
    <value>master-password is used</value>
  </data>
  <data name="MasterPassUse" xml:space="preserve">
    <value>use master-password to protect your data:</value>
  </data>
  <data name="NameHere" xml:space="preserve">
    <value>Name der Karte</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Neu</value>
  </data>
  <data name="NoCard" xml:space="preserve">
    <value>Fügen Sie bitte eine neue Karte</value>
  </data>
  <data name="Pin" xml:space="preserve">
    <value>Merken</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Senden Sie eine Bewertung</value>
    <comment>??</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>pin holder</value>
  </data>
</root>